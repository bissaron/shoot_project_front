{"ast":null,"code":"import Swal from \"sweetalert2\";\nexport default {\n  data() {\n    return {\n      rangeItems: [],\n      // Change the property name\n      editRange: {},\n      // Rename this as well\n      editDialog: false,\n      headers: [{\n        text: \"#\",\n        align: \"center\",\n        sortable: false,\n        value: \"index\"\n      }, {\n        text: \"ชื่อสนาม\",\n        align: \"start\",\n        sortable: false,\n        value: \"s_name\" // Update the value to 's_name'\n      }, {\n        text: \"Actions\",\n        align: \"center\",\n        value: \"actions\",\n        sortable: false\n      }]\n    };\n  },\n  created() {\n    this.getAllRange();\n  },\n  computed: {\n    indexedRangeItems() {\n      return this.rangeItems.map((item, index) => {\n        return {\n          ...item,\n          index: index + 1\n        };\n      });\n    }\n  },\n  methods: {\n    async getAllRange() {\n      try {\n        const response = await this.axios.get(process.env.VUE_APP_API_SERVER + `/shootingranges` // Change the endpoint\n        );\n\n        if (response.status == 200) {\n          this.rangeItems = response.data; // Update the property name\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    },\n    async deleteItem(range) {\n      Swal.fire({\n        title: \"แจ้งเตือน!\",\n        text: `คุณต้องการลบสนาม ${range.s_name}?`,\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"ตกลง\",\n        cancelButtonText: \"ยกเลิก\"\n      }).then(async result => {\n        if (result.isConfirmed) {\n          try {\n            const response = await this.axios.delete(process.env.VUE_APP_API_SERVER + `/shootingrange/${range.s_id}`);\n            if (response.status === 200) {\n              Swal.fire({\n                title: \"ลบสนามสำเร็จ!\",\n                // text: \"คุณสมัครสมาชิกสำเร็จ\",\n                icon: \"success\",\n                confirmButtonText: \"ตกลง\",\n                timer: 1500\n              });\n              this.getAllRange();\n            }\n          } catch (err) {\n            Swal.fire({\n              title: \"เกิดข้อผิดพลาด!\",\n              // text: \"คุณสมัครสมาชิกสำเร็จ\",\n              icon: \"error\",\n              confirmButtonText: \"ตกลง\",\n              timer: 1500\n            });\n            console.error(err);\n          }\n        }\n      });\n    },\n    editUser(item) {\n      this.editRange = {\n        ...item\n      };\n      this.editDialog = true;\n    },\n    async saveRangeChanges(rangeId) {\n      let data = {\n        s_name: this.editRange.s_name\n      };\n      try {\n        const response = await this.axios.put(process.env.VUE_APP_API_SERVER + `/shootingrange/${rangeId}`, data);\n        if (response.status === 200) {\n          Swal.fire({\n            title: \"แก้ไขข้อมูลสนามสำเร็จ!\",\n            // text: \"คุณสมัครสมาชิกสำเร็จ\",\n            icon: \"success\",\n            confirmButtonText: \"ตกลง\",\n            timer: 1000\n          });\n          this.getAllRange();\n        }\n        this.editDialog = false;\n      } catch (error) {\n        Swal.fire({\n          title: \"เกิดข้อผิดพลาด!\",\n          // text: \"คุณสมัครสมาชิกสำเร็จ\",\n          icon: \"error\",\n          confirmButtonText: \"ตกลง\",\n          timer: 1500\n        });\n        console.error(\"error:\", error);\n      }\n    },\n    cancelEdit() {\n      // Reset the editGun and close the dialog\n      this.editRange = {};\n      this.editDialog = false;\n    }\n  }\n};","map":{"version":3,"names":["Swal","data","rangeItems","editRange","editDialog","headers","text","align","sortable","value","created","getAllRange","computed","indexedRangeItems","map","item","index","methods","response","axios","get","process","env","VUE_APP_API_SERVER","status","err","console","error","deleteItem","range","fire","title","s_name","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","delete","s_id","timer","editUser","saveRangeChanges","rangeId","put","cancelEdit"],"sources":["src/views/RangeListView.vue"],"sourcesContent":["<template>\n    <v-container style=\"padding-top: 50px; padding-bottom: 60px\">\n    <v-btn text @click=\"$router.go(-1)\" style=\"margin-bottom: 20px\">\n      <v-icon left>mdi-arrow-left</v-icon> ย้อนกลับ\n    </v-btn>\n    <h2>รายชื่อสนาม</h2>\n    <v-row>\n      <v-col\n        style=\"display: flex; justify-content: flex-end; margin-bottom: 20px\"\n      >\n        <v-btn color=\"var(--color-main)\" to=\"/range/add\">เพิ่มสนาม</v-btn>\n      </v-col>\n    </v-row>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"indexedRangeItems\"\n      class=\"elevation-1\"\n    >\n      <template v-slot:[`item.actions`]=\"{ item }\">\n        <v-icon small class=\"mr-2\" @click=\"editUser(item)\"> mdi-pencil </v-icon>\n        <v-icon small @click=\"deleteItem(item)\"> mdi-delete </v-icon>\n      </template>\n    </v-data-table>\n\n    <v-dialog v-model=\"editDialog\" max-width=\"600px\">\n      <v-card>\n        <v-card-title>แก้ไขข้อมูล</v-card-title>\n        <v-card-text>\n          <!-- Your range edit form here -->\n          <v-text-field\n            v-model=\"editRange.s_name\"\n            label=\"ชื่อสนาม\"\n          ></v-text-field>\n          <!-- Update other form fields accordingly -->\n\n          <div\n            style=\"\n              display: flex;\n              justify-content: flex-end;\n              align-items: center;\n              margin-top: 10px;\n            \"\n          >\n            <v-btn color=\"primary\" @click=\"saveRangeChanges(editRange.s_id)\"\n              >บันทึก</v-btn\n            >\n            <v-btn style=\"margin-left: 10px\" @click=\"cancelEdit\"\n              >ยกเลิก</v-btn\n            >\n          </div>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nimport Swal from \"sweetalert2\";\n\nexport default {\n  data() {\n    return {\n      rangeItems: [], // Change the property name\n      editRange: {}, // Rename this as well\n      editDialog: false,\n      headers: [\n        {\n          text: \"#\",\n          align: \"center\",\n          sortable: false,\n          value: \"index\",\n        },\n        {\n          text: \"ชื่อสนาม\",\n          align: \"start\",\n          sortable: false,\n          value: \"s_name\", // Update the value to 's_name'\n        },\n        { text: \"Actions\", align: \"center\", value: \"actions\", sortable: false },\n      ],\n    };\n  },\n\n  created() {\n    this.getAllRange();\n  },\n\n  computed: {\n    indexedRangeItems() {\n      return this.rangeItems.map((item, index) => {\n        return { ...item, index: index + 1 };\n      });\n    },\n  },\n\n  methods: {\n    async getAllRange() {\n      try {\n        const response = await this.axios.get(\n          process.env.VUE_APP_API_SERVER + `/shootingranges` // Change the endpoint\n        );\n        if (response.status == 200) {\n          this.rangeItems = response.data; // Update the property name\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    },\n\n    async deleteItem(range) {\n      Swal.fire({\n        title: \"แจ้งเตือน!\",\n        text: `คุณต้องการลบสนาม ${range.s_name}?`,\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"ตกลง\",\n        cancelButtonText: \"ยกเลิก\",\n      }).then(async (result) => {\n        if (result.isConfirmed) {\n          try {\n            const response = await this.axios.delete(\n              process.env.VUE_APP_API_SERVER + `/shootingrange/${range.s_id}`\n            );\n            if (response.status === 200) {\n              Swal.fire({\n                title: \"ลบสนามสำเร็จ!\",\n                // text: \"คุณสมัครสมาชิกสำเร็จ\",\n                icon: \"success\",\n                confirmButtonText: \"ตกลง\",\n                timer: 1500,\n              });\n              this.getAllRange();\n            }\n          } catch (err) {\n            Swal.fire({\n              title: \"เกิดข้อผิดพลาด!\",\n              // text: \"คุณสมัครสมาชิกสำเร็จ\",\n              icon: \"error\",\n              confirmButtonText: \"ตกลง\",\n              timer: 1500,\n            });\n            console.error(err);\n          }\n        }\n      });\n    },\n\n    editUser(item) {\n      this.editRange = { ...item };\n      this.editDialog = true;\n    },\n\n    async saveRangeChanges(rangeId) {\n      let data = { s_name: this.editRange.s_name };\n\n      try {\n        const response = await this.axios.put(\n          process.env.VUE_APP_API_SERVER + `/shootingrange/${rangeId}`,\n          data\n        );\n        if (response.status === 200) {\n          Swal.fire({\n            title: \"แก้ไขข้อมูลสนามสำเร็จ!\",\n            // text: \"คุณสมัครสมาชิกสำเร็จ\",\n            icon: \"success\",\n            confirmButtonText: \"ตกลง\",\n            timer: 1000,\n          });\n          this.getAllRange();\n        }\n\n        this.editDialog = false;\n      } catch (error) {\n        Swal.fire({\n          title: \"เกิดข้อผิดพลาด!\",\n          // text: \"คุณสมัครสมาชิกสำเร็จ\",\n          icon: \"error\",\n          confirmButtonText: \"ตกลง\",\n          timer: 1500,\n        });\n\n        console.error(\"error:\", error);\n      }\n    },\n    cancelEdit() {\n      // Reset the editGun and close the dialog\n      this.editRange = {};\n      this.editDialog = false;\n    },\n  },\n};\n</script>\n"],"mappings":"AAyDA,OAAAA,IAAA;AAEA;EACAC,KAAA;IACA;MACAC,UAAA;MAAA;MACAC,SAAA;MAAA;MACAC,UAAA;MACAC,OAAA,GACA;QACAC,IAAA;QACAC,KAAA;QACAC,QAAA;QACAC,KAAA;MACA,GACA;QACAH,IAAA;QACAC,KAAA;QACAC,QAAA;QACAC,KAAA;MACA,GACA;QAAAH,IAAA;QAAAC,KAAA;QAAAE,KAAA;QAAAD,QAAA;MAAA;IAEA;EACA;EAEAE,QAAA;IACA,KAAAC,WAAA;EACA;EAEAC,QAAA;IACAC,kBAAA;MACA,YAAAX,UAAA,CAAAY,GAAA,EAAAC,IAAA,EAAAC,KAAA;QACA;UAAA,GAAAD,IAAA;UAAAC,KAAA,EAAAA,KAAA;QAAA;MACA;IACA;EACA;EAEAC,OAAA;IACA,MAAAN,YAAA;MACA;QACA,MAAAO,QAAA,cAAAC,KAAA,CAAAC,GAAA,CACAC,OAAA,CAAAC,GAAA,CAAAC,kBAAA;QACA;;QACA,IAAAL,QAAA,CAAAM,MAAA;UACA,KAAAtB,UAAA,GAAAgB,QAAA,CAAAjB,IAAA;QACA;MACA,SAAAwB,GAAA;QACAC,OAAA,CAAAC,KAAA,CAAAF,GAAA;MACA;IACA;IAEA,MAAAG,WAAAC,KAAA;MACA7B,IAAA,CAAA8B,IAAA;QACAC,KAAA;QACAzB,IAAA,sBAAAuB,KAAA,CAAAG,MAAA;QACAC,IAAA;QACAC,gBAAA;QACAC,iBAAA;QACAC,gBAAA;MACA,GAAAC,IAAA,OAAAC,MAAA;QACA,IAAAA,MAAA,CAAAC,WAAA;UACA;YACA,MAAArB,QAAA,cAAAC,KAAA,CAAAqB,MAAA,CACAnB,OAAA,CAAAC,GAAA,CAAAC,kBAAA,qBAAAM,KAAA,CAAAY,IAAA,EACA;YACA,IAAAvB,QAAA,CAAAM,MAAA;cACAxB,IAAA,CAAA8B,IAAA;gBACAC,KAAA;gBACA;gBACAE,IAAA;gBACAE,iBAAA;gBACAO,KAAA;cACA;cACA,KAAA/B,WAAA;YACA;UACA,SAAAc,GAAA;YACAzB,IAAA,CAAA8B,IAAA;cACAC,KAAA;cACA;cACAE,IAAA;cACAE,iBAAA;cACAO,KAAA;YACA;YACAhB,OAAA,CAAAC,KAAA,CAAAF,GAAA;UACA;QACA;MACA;IACA;IAEAkB,SAAA5B,IAAA;MACA,KAAAZ,SAAA;QAAA,GAAAY;MAAA;MACA,KAAAX,UAAA;IACA;IAEA,MAAAwC,iBAAAC,OAAA;MACA,IAAA5C,IAAA;QAAA+B,MAAA,OAAA7B,SAAA,CAAA6B;MAAA;MAEA;QACA,MAAAd,QAAA,cAAAC,KAAA,CAAA2B,GAAA,CACAzB,OAAA,CAAAC,GAAA,CAAAC,kBAAA,qBAAAsB,OAAA,IACA5C,IACA;QACA,IAAAiB,QAAA,CAAAM,MAAA;UACAxB,IAAA,CAAA8B,IAAA;YACAC,KAAA;YACA;YACAE,IAAA;YACAE,iBAAA;YACAO,KAAA;UACA;UACA,KAAA/B,WAAA;QACA;QAEA,KAAAP,UAAA;MACA,SAAAuB,KAAA;QACA3B,IAAA,CAAA8B,IAAA;UACAC,KAAA;UACA;UACAE,IAAA;UACAE,iBAAA;UACAO,KAAA;QACA;QAEAhB,OAAA,CAAAC,KAAA,WAAAA,KAAA;MACA;IACA;IACAoB,WAAA;MACA;MACA,KAAA5C,SAAA;MACA,KAAAC,UAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}